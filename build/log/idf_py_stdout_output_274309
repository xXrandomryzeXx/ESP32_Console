[1/9] Performing build step for 'bootloader'
[1/1] cd /home/alexander/esp/learn_japanese/build/bootloader/esp-idf/esptool_py && /home/alexander/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/alexander/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/alexander/esp/learn_japanese/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/memory.c.obj
/home/alexander/esp/learn_japanese/main/memory.c: In function 's_load_image':
/home/alexander/esp/learn_japanese/main/memory.c:68:33: warning: passing argument 1 of 'decode_image_from_sd' from incompatible pointer type [-Wincompatible-pointer-types]
   68 |     return decode_image_from_sd(pixels, *pixels, len, 0);
      |                                 ^~~~~~
      |                                 |
      |                                 uint8_t ** {aka unsigned char **}
In file included from /home/alexander/esp/learn_japanese/main/memory.c:3:
/home/alexander/esp/learn_japanese/main/decode_image.h:40:43: note: expected 'uint16_t **' {aka 'short unsigned int **'} but argument is of type 'uint8_t **' {aka 'unsigned char **'}
   40 | esp_err_t decode_image_from_sd(uint16_t **pixels, uint8_t *image_start, uint32_t image_size,
      |                                ~~~~~~~~~~~^~~~~~
/home/alexander/esp/learn_japanese/main/memory.c: In function 'sd_init':
/home/alexander/esp/learn_japanese/main/memory.c:109:15: warning: unused variable 'ret' [-Wunused-variable]
  109 |     esp_err_t ret;
      |               ^~~
/home/alexander/esp/learn_japanese/main/memory.c: At top level:
/home/alexander/esp/learn_japanese/main/memory.c:27:18: warning: 's_read_file' defined but not used [-Wunused-function]
   27 | static esp_err_t s_read_file(const char *path)
      |                  ^~~~~~~~~~~
/home/alexander/esp/learn_japanese/main/memory.c:12:18: warning: 's_write_file' defined but not used [-Wunused-function]
   12 | static esp_err_t s_write_file(const char *path, char *data)
      |                  ^~~~~~~~~~~~
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable spi_master.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/alexander/esp/learn_japanese/build/spi_master.bin
[7/7] cd /home/alexander/esp/learn_japanese/build/esp-idf/esptool_py && /home/alexander/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/alexander/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/alexander/esp/learn_japanese/build/partition_table/partition-table.bin /home/alexander/esp/learn_japanese/build/spi_master.bin
spi_master.bin binary size 0x4fee0 bytes. Smallest app partition is 0x100000 bytes. 0xb0120 bytes (69%) free.
