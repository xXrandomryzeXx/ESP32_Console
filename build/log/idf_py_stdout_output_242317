[1/11] Performing build step for 'bootloader'
[1/1] cd /home/alexander/esp/learn_japanese/build/bootloader/esp-idf/esptool_py && /home/alexander/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/alexander/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/alexander/esp/learn_japanese/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/display.c.obj
/home/alexander/esp/learn_japanese/main/display.c: In function 'init_background_image_from_sd':
/home/alexander/esp/learn_japanese/main/display.c:30:43: warning: passing argument 2 of 's_load_image' from incompatible pointer type [-Wincompatible-pointer-types]
   30 |     return s_load_image("background.jpg", &pixels);
      |                                           ^~~~~~~
      |                                           |
      |                                           uint16_t ** {aka short unsigned int **}
In file included from /home/alexander/esp/learn_japanese/main/display.c:5:
/home/alexander/esp/learn_japanese/main/memory.h:13:52: note: expected 'uint8_t **' {aka 'unsigned char **'} but argument is of type 'uint16_t **' {aka 'short unsigned int **'}
   13 | esp_err_t s_load_image(const char *path, uint8_t **pixels);
      |                                          ~~~~~~~~~~^~~~~~
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/lcd.c.obj
/home/alexander/esp/learn_japanese/main/lcd.c: In function 'lcd_init':
/home/alexander/esp/learn_japanese/main/lcd.c:161:15: warning: unused variable 'result' [-Wunused-variable]
  161 |     esp_err_t result = gpio_config(&io_conf);
      |               ^~~~~~
/home/alexander/esp/learn_japanese/main/lcd.c: In function 'send_line_finish':
/home/alexander/esp/learn_japanese/main/lcd.c:249:15: warning: variable 'ret' set but not used [-Wunused-but-set-variable]
  249 |     esp_err_t ret;
      |               ^~~
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable spi_master.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/alexander/esp/learn_japanese/build/spi_master.bin
[9/9] cd /home/alexander/esp/learn_japanese/build/esp-idf/esptool_py && /home/alexander/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/alexander/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/alexander/esp/learn_japanese/build/partition_table/partition-table.bin /home/alexander/esp/learn_japanese/build/spi_master.bin
spi_master.bin binary size 0x4fda0 bytes. Smallest app partition is 0x100000 bytes. 0xb0260 bytes (69%) free.
