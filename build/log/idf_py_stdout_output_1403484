[1/9] Performing build step for 'bootloader'
[1/1] cd /home/alexander/esp/learn_japanese/build/bootloader/esp-idf/esptool_py && /home/alexander/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/alexander/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/alexander/esp/learn_japanese/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/decode_image.c.obj
/home/alexander/esp/learn_japanese/main/decode_image.c: In function 'decode_image_from_sd':
/home/alexander/esp/learn_japanese/main/decode_image.c:104:34: warning: initialization of 'uint8_t *' {aka 'unsigned char *'} from incompatible pointer type 'uint8_t ***' {aka 'unsigned char ***'} [-Wincompatible-pointer-types]
  104 |         .indata = /*(uint8_t*)*/ &image_start,
      |                                  ^
/home/alexander/esp/learn_japanese/main/decode_image.c:104:34: note: (near initialization for 'jpeg_cfg.indata')
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable spi_master.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/alexander/esp/learn_japanese/build/spi_master.bin
[9/9] cd /home/alexander/esp/learn_japanese/build/esp-idf/esptool_py && /home/alexander/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/alexander/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/alexander/esp/learn_japanese/build/partition_table/partition-table.bin /home/alexander/esp/learn_japanese/build/spi_master.bin
spi_master.bin binary size 0x51c80 bytes. Smallest app partition is 0x100000 bytes. 0xae380 bytes (68%) free.
